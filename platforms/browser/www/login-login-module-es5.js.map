{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","router","formBuilder","userService","db","imgfile","new_item_form","group","email","required","password","navigate","item","self","signInWithEmailAndPassword","then","result","user","currentUser","collection","where","uid","get","querySnapshot","forEach","doc","username","data","image","followers","following","posts","status","fullname","privateStat","userDoc","id","saved","setUsername","error","console","log","errorCode","code","errorMessage","message","alert","reset","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n  \\n  <ion-img [src]=\\\"imgfile\\\"></ion-img>\\n  <form [formGroup]=\\\"new_item_form\\\" (submit)=\\\"login(new_item_form.value)\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <ion-input class=\\\"place\\\" type=\\\"text\\\" formControlName=\\\"email\\\" placeHolder=\\\"Email\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" placeHolder=\\\"Password\\\" required></ion-input>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col></ion-col>\\n        <ion-col>\\n          <ion-button color=\\\"light\\\" class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!new_item_form.valid\\\">Login</ion-button>\\n        </ion-col>\\n        <ion-col></ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col></ion-col>\\n      <ion-col>\\n        <ion-buttons>\\n          <ion-button (click)=\\\"signup()\\\"> <h6 class=\\\"text\\\">Click Here to Signup</h6> </ion-button>\\n        </ion-buttons>\\n      </ion-col>\\n      <ion-col></ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-content {\\n  --ion-background-color: peachpuff;\\n}\\n\\nion-button {\\n  border-color: white;\\n}\\n\\nion-input {\\n  border-radius: 10px;\\n  background: #ffe3ca;\\n  text-indent: 20px;\\n}\\n\\n.text {\\n  font-size: x-small;\\n  color: white;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1dHZpa3BhdGVsL2Nsb25lL3NyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQ0FBQTtBQ0NKOztBRENBO0VBQ0ksbUJBQUE7QUNFSjs7QURBQTtFQUNJLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQ0dKOztBREFBO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUNHSiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBwZWFjaHB1ZmY7XG59XG5pb24tYnV0dG9uIHtcbiAgICBib3JkZXItY29sb3I6d2hpdGU7XG59XG5pb24taW5wdXQge1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZTNjYTtcbiAgICB0ZXh0LWluZGVudDogMjBweDtcbn1cblxuLnRleHR7XG4gICAgZm9udC1zaXplOiB4LXNtYWxsO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn0iLCJpb24tY29udGVudCB7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHBlYWNocHVmZjtcbn1cblxuaW9uLWJ1dHRvbiB7XG4gIGJvcmRlci1jb2xvcjogd2hpdGU7XG59XG5cbmlvbi1pbnB1dCB7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmUzY2E7XG4gIHRleHQtaW5kZW50OiAyMHB4O1xufVxuXG4udGV4dCB7XG4gIGZvbnQtc2l6ZTogeC1zbWFsbDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  new_item_form: FormGroup;\n  db = firebase.firestore();\n  imgfile=\"/assets/logo.png\";\n\n  constructor(\n    private router: Router,\n    public formBuilder: FormBuilder,\n    public userService:UserService\n  ) { }\n\n  ngOnInit() {\n    this.new_item_form = this.formBuilder.group({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  signup() {\n    this.router.navigate([\"/signup\"]);\n  }\n\n  login(item) {\n    var self = this;\n    var email = item.email;\n    var password = item.password;\n    \n    firebase.auth().signInWithEmailAndPassword(email, password).then(function(result) {\n      var user= firebase.auth().currentUser;\n          self.db.collection(\"users\").where(\"uid\", \"==\", user.uid)\n            .get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                    var username = doc.data().username;\n                    var image = doc.data().image;\n                    var followers = doc.data().followers;\n                    var following = doc.data().following;\n                    var posts = doc.data().posts;\n                    var status = doc.data().status;\n                    var fullname = doc.data().fullname;\n                    var privateStat = doc.data().privateStat;\n                    var userDoc = doc.id;\n                    var saved = doc.data().saved;\n                    self.userService.setUsername(username,image,status,posts,followers,following,fullname,privateStat,userDoc,saved);\n                });\n            })\n            .catch(function(error) {\n                console.log(\"Error getting documents: \", error);\n            });\n        self.router.navigate([\"/tabs/tab1\"]);\n\n          }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorCode);\n\n      if (errorCode === 'auth/wrong-password') {\n        alert('Wrong password.');\n      } else if (errorCode === 'auth/user-not-found'){\n        alert(\"User does not exist\");\n      }\n      console.log(error);\n    });\n    this.new_item_form.reset();\n  }\n}\n"]}