{"version":3,"sources":["webpack:///src/app/user/user.page.html","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.module.ts","webpack:///src/app/user/user.page.scss","webpack:///src/app/user/user.page.ts"],"names":["routes","path","component","UserPageRoutingModule","imports","forChild","exports","UserPageModule","declarations","UserPage","route","router","userService","alertController","toastController","db","postId","posts","profile_segment","self","setTimeout","postRef","collection","doc","current_user","id","get","then","user","data","ref","post","push","caption","comments","image","likes","posted","userimg","username","pid","getObservable","subscribe","followingUser","following","params","param","bool","length","currUser","currentUser","uid","userRef","onSnapshot","userFriend","followers","item","followToast","follow","alreadyToast","create","color","message","position","duration","toast","present","header","buttons","text","role","handler","unfollow","unfollowToast","alert","userDoc","like","arr","navigate","unlike","index","indexOf","splice","selector","template"],"mappings":"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","file":"user-user-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{current_user.username}}'s Profile</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-item lines=\\\"none\\\">\\n  <ion-row class=\\\"ion-padding bottom\\\">\\n    <!-- Avatar -->\\n    <ion-col>\\n      <img [src]=\\\"current_user.image\\\" class=\\\"avatar\\\"/>\\n    </ion-col>\\n    <!-- Information about user -->\\n    <ion-col class=\\\"ion-text-center\\\">\\n      <h6>{{current_user.posts}}</h6>\\n      <p><strong>Posts</strong></p>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\">\\n      <h6>{{current_user.followers}}</h6>\\n      <p><strong>Followers</strong></p>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\">\\n      <h6>{{current_user.following}}</h6>\\n      <p><strong>Following</strong></p>\\n    </ion-col>\\n\\n    <ion-col *ngIf=\\\"!following()\\\">\\n      <ion-button expand=\\\"block\\\" (click)=\\\"follow()\\\">‏‏‎ ‎‏‏‎ ‎follow‏‏‎ ‎‏‏‎ ‎</ion-button>\\n    </ion-col>\\n    <ion-col *ngIf=\\\"following()\\\">\\n      <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"unfollow()\\\">‏‏‎ ‎‏‏‎ ‎follow‏‏‎ing ‎‏‏‎ ‎</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  </ion-item>\\n  <!-- Profile info -->\\n  <div class=\\\"padding\\\">\\n    <p><b>{{current_user.fullname}}</b></p>\\n    <p>{{current_user.status}}</p>\\n  </div>\\n\\n\\n\\n  <div *ngIf=\\\"!following()\\\">\\n    <div *ngIf=\\\"current_user.privateStat === 'true'\\\" class=\\\"ion-padding\\\">\\n      <h4 class=\\\"ion-text-center\\\">{{current_user.fullname}}'s Profile is private, follow to see posts</h4>\\n    </div>\\n\\n    <div *ngIf=\\\"current_user.privateStat === 'false'\\\">\\n      <div>\\n        <ion-segment [(ngModel)]=\\\"profile_segment\\\">\\n          <ion-segment-button value=\\\"grid\\\">\\n            <ion-icon name=\\\"apps\\\"></ion-icon>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"list\\\">\\n            <ion-icon name=\\\"browsers-sharp\\\"></ion-icon>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </div>\\n\\n      <div [ngSwitch]=\\\"profile_segment\\\">\\n        <ion-list *ngSwitchCase=\\\"'grid'\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col sizeLg=\\\"4\\\" sizeMd=\\\"4\\\" sizeXs=\\\"4\\\" *ngFor=\\\"let i of posts\\\">\\n                <img [src]=\\\"i.image\\\">\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-list>\\n\\n        <ion-list *ngSwitchCase=\\\"'list'\\\">\\n          <ion-card *ngFor=\\\"let post of posts\\\">\\n            <ion-card-header>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-avatar>\\n                    <img [src]=\\\"post.userimg\\\">\\n                  </ion-avatar>\\n                <h6 style=\\\"font-weight: bold\\\">‏‏‎ ‎‏‏‎ ‎{{post.username}}</h6>\\n                </ion-item>\\n            </ion-card-header>\\n        \\n            <img [src]=\\\"post.image\\\">\\n        \\n            <ion-buttons>\\n              <ion-button *ngIf=\\\"!liked(post)\\\" (click)=\\\"like(post)\\\">\\n                <ion-icon name=\\\"heart-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button *ngIf=\\\"liked(post)\\\" (click)=\\\"unlike(post)\\\">\\n                <ion-icon class=\\\"border\\\" name=\\\"heart\\\" color=\\\"danger\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button (click)=\\\"comment(post)\\\">\\n                <ion-icon name=\\\"chatbubble-outline\\\"></ion-icon>\\n              </ion-button>\\n            </ion-buttons>\\n\\n            <ion-card-content>\\n              <p>{{post.likes?.length}} Likes</p>\\n              <p *ngIf=\\\"ifCaption(post)\\\"><b>{{post.username}}</b>‏‏‎ ‎{{post.caption}}</p>\\n              \\n              <ion-label class=\\\"color\\\" *ngIf=\\\"commentSize(post)\\\" (click)=\\\"comment(post)\\\"> View all {{post.comments?.length}} comments...</ion-label>\\n              <ion-list lines=\\\"none\\\" *ngFor=\\\"let item of post.comments.slice(0,1)\\\">\\n                <p><b>‏‏‎{{item.username}}</b>‏‏‎ ‎{{item.comment}} </p>\\n              </ion-list>\\n            </ion-card-content>\\n            <ion-label>‏‏‎ ‎{{post.posted | date: 'MM/dd/yyyy'}}</ion-label>\\n          </ion-card>\\n        </ion-list>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"following()\\\">\\n    <div>\\n      <ion-segment [(ngModel)]=\\\"profile_segment\\\">\\n        <ion-segment-button value=\\\"grid\\\">\\n          <ion-icon name=\\\"apps\\\"></ion-icon>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"list\\\">\\n          <ion-icon name=\\\"browsers-sharp\\\"></ion-icon>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </div>\\n\\n    <div [ngSwitch]=\\\"profile_segment\\\">\\n      <ion-list *ngSwitchCase=\\\"'grid'\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col sizeLg=\\\"4\\\" sizeMd=\\\"4\\\" sizeXs=\\\"4\\\" *ngFor=\\\"let i of posts\\\">\\n              <img [src]=\\\"i.image\\\">\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-list>\\n\\n      <ion-list *ngSwitchCase=\\\"'list'\\\">\\n        <ion-card *ngFor=\\\"let post of posts\\\">\\n          <ion-card-header>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-avatar>\\n                  <img [src]=\\\"post.userimg\\\">\\n                </ion-avatar>\\n              <h6 style=\\\"font-weight: bold\\\">‏‏‎ ‎‏‏‎ ‎{{post.username}}</h6>\\n              </ion-item>\\n          </ion-card-header>\\n      \\n          <img [src]=\\\"post.image\\\">\\n      \\n          <ion-buttons>\\n            <ion-button *ngIf=\\\"!liked(post)\\\" (click)=\\\"like(post)\\\">\\n              <ion-icon name=\\\"heart-outline\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button *ngIf=\\\"liked(post)\\\" (click)=\\\"unlike(post)\\\">\\n              <ion-icon class=\\\"border\\\" name=\\\"heart\\\" color=\\\"danger\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"comment(post)\\\">\\n              <ion-icon name=\\\"chatbubble-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n      \\n          <ion-card-content>\\n            <p>{{post.likes?.length}} Likes</p>\\n            <p *ngIf=\\\"ifCaption(post)\\\"><b>{{post.username}}</b>‏‏‎ ‎{{post.caption}}</p>\\n            \\n            <ion-label class=\\\"color\\\" *ngIf=\\\"commentSize(post)\\\" (click)=\\\"comment(post)\\\"> View all {{post.comments?.length}} comments...</ion-label>\\n            <ion-list lines=\\\"none\\\" *ngFor=\\\"let item of post.comments.slice(0,1)\\\">\\n              <p><b>‏‏‎{{item.username}}</b>‏‏‎ ‎{{item.comment}} </p>\\n            </ion-list>\\n          </ion-card-content>\\n          <ion-label>‏‏‎ ‎{{post.posted | date: 'MM/dd/yyyy'}}</ion-label>\\n        </ion-card>\\n      </ion-list>\\n    </div>\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserPage } from './user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserPageRoutingModule } from './user-routing.module';\n\nimport { UserPage } from './user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserPageRoutingModule\n  ],\n  declarations: [UserPage]\n})\nexport class UserPageModule {}\n","export default \"ion-header {\\n  --ion-background-color: peachpuff;\\n}\\n\\nion-content {\\n  --ion-background-color: peachpuff;\\n}\\n\\n.padding {\\n  padding-top: 0px;\\n  padding-bottom: 0px;\\n  padding-left: 20px;\\n}\\n\\n.lines {\\n  border-bottom: 1px solid grey;\\n  border-top: 1px solid grey;\\n}\\n\\n.bottom {\\n  padding-bottom: 0px;\\n}\\n\\n.avatar {\\n  width: 100% !important;\\n  height: 100% !important;\\n  max-width: 600px !important;\\n  max-height: 600px !important;\\n  border-radius: 30px;\\n}\\n\\nion-card-header {\\n  padding: 0;\\n}\\n\\nion-card-content {\\n  color: black;\\n}\\n\\n.black {\\n  color: black;\\n}\\n\\n.color {\\n  color: grey;\\n}\\n\\n.size {\\n  width: 100% !important;\\n  height: 100% !important;\\n  max-width: 30px !important;\\n  max-height: 30px !important;\\n}\\n\\n.center {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: auto;\\n  margin-bottom: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1dHZpa3BhdGVsL2Nsb25lL3NyYy9hcHAvdXNlci91c2VyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvdXNlci91c2VyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlDQUFBO0FDQ0o7O0FERUE7RUFDSSxpQ0FBQTtBQ0NKOztBRENBO0VBQ0ksZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0FDRUo7O0FEQUE7RUFDSSw2QkFBQTtFQUNBLDBCQUFBO0FDR0o7O0FEREE7RUFDSSxtQkFBQTtBQ0lKOztBREZBO0VBQ0ksc0JBQUE7RUFDQSx1QkFBQTtFQUNBLDJCQUFBO0VBQ0EsNEJBQUE7RUFFQSxtQkFBQTtBQ0lKOztBREZBO0VBQ0ksVUFBQTtBQ0tKOztBREhBO0VBQ0ksWUFBQTtBQ01KOztBREhBO0VBQ0UsWUFBQTtBQ01GOztBREpBO0VBQ0ksV0FBQTtBQ09KOztBRExFO0VBQ0Usc0JBQUE7RUFDQSx1QkFBQTtFQUNBLDBCQUFBO0VBQ0EsMkJBQUE7QUNRSjs7QURMRTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FDUUoiLCJmaWxlIjoic3JjL2FwcC91c2VyL3VzZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWhlYWRlciB7XG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcGVhY2hwdWZmO1xufVxuXG5pb24tY29udGVudCB7XG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcGVhY2hwdWZmO1xufVxuLnBhZGRpbmcge1xuICAgIHBhZGRpbmctdG9wOiAwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG59XG4ubGluZXN7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGdyZXk7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGdyZXk7XG59XG4uYm90dG9tIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xufVxuLmF2YXRhciB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBoZWlnaHQgOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgbWF4LXdpZHRoOiA2MDBweCAhaW1wb3J0YW50OyAgLy9hbnkgc2l6ZVxuICAgIG1heC1oZWlnaHQ6IDYwMHB4ICFpbXBvcnRhbnQ7IC8vYW55IHNpemVcblxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG59XG5pb24tY2FyZC1oZWFkZXIge1xuICAgIHBhZGRpbmc6IDA7XG59XG5pb24tY2FyZC1jb250ZW50e1xuICAgIGNvbG9yOiBibGFjaztcbn1cblxuLmJsYWNrIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuLmNvbG9yIHtcbiAgICBjb2xvcjogZ3JleTtcbn1cbiAgLnNpemUge1xuICAgIHdpZHRoOjEwMCUgIWltcG9ydGFudDtcbiAgICBoZWlnaHQgOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgbWF4LXdpZHRoOiAzMHB4ICFpbXBvcnRhbnQ7ICAvL2FueSBzaXplXG4gICAgbWF4LWhlaWdodDogMzBweCAhaW1wb3J0YW50OyAvL2FueSBzaXplXG4gIH1cblxuICAuY2VudGVyIHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgbWFyZ2luLXRvcDogYXV0bztcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xuICB9IiwiaW9uLWhlYWRlciB7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHBlYWNocHVmZjtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBwZWFjaHB1ZmY7XG59XG5cbi5wYWRkaW5nIHtcbiAgcGFkZGluZy10b3A6IDBweDtcbiAgcGFkZGluZy1ib3R0b206IDBweDtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuXG4ubGluZXMge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZ3JleTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGdyZXk7XG59XG5cbi5ib3R0b20ge1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xufVxuXG4uYXZhdGFyIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gIG1heC13aWR0aDogNjAwcHggIWltcG9ydGFudDtcbiAgbWF4LWhlaWdodDogNjAwcHggIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcbn1cblxuaW9uLWNhcmQtaGVhZGVyIHtcbiAgcGFkZGluZzogMDtcbn1cblxuaW9uLWNhcmQtY29udGVudCB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmJsYWNrIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uY29sb3Ige1xuICBjb2xvcjogZ3JleTtcbn1cblxuLnNpemUge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbiAgbWF4LXdpZHRoOiAzMHB4ICFpbXBvcnRhbnQ7XG4gIG1heC1oZWlnaHQ6IDMwcHggIWltcG9ydGFudDtcbn1cblxuLmNlbnRlciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IGF1dG87XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport * as firebase from 'firebase'\nimport { ToastController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.page.html',\n  styleUrls: ['./user.page.scss'],\n})\n\nexport class UserPage implements OnInit {\n\n  current_user;\n  db = firebase.firestore();\n  postId = [];\n  posts = [];\n  followingUser;\n\n  profile_segment = \"grid\";\n\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public userService: UserService,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {\n    var self = this;\n    setTimeout(() => {\n      var postRef = this.db.collection(\"users\").doc(self.current_user.id);\n      postRef.get().then(function(doc) {\n        var user = doc.data();\n        self.postId = user.posts;\n      })\n      setTimeout(() => {\n        for(let id of self.postId) {\n          var ref = this.db.collection(\"posts\").doc(id);\n          ref.get().then(function(doc) {\n            var post = doc.data();\n            self.posts.push({caption:post.caption,comments:post.comments,\n              id:post.id,image:post.image,likes:post.likes,posted:post.posted,\n              userimg:post.userimg,username:post.username,pid:doc.id});\n          })\n        }\n      }, 300);\n    }, 50);\n\n    this.userService.getObservable().subscribe((data) => {\n      this.followingUser = this.userService.following;\n    });\n    \n    this.followingUser = this.userService.following;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      param => {\n        this.current_user = param;\n      }\n    )\n  }\n\n  \n\n  commentSize(post) {\n    var bool = false;\n    var comments = post.comments;\n    if(comments.length !== 0) {\n      bool = true;\n    }\n    return bool;\n  }\n\n  ifCaption(post) {\n    var bool = false;\n    var caption = post.caption;\n    if(caption.length !== 0) {\n      bool = true;\n    }\n    return bool;\n  }\n\n  follow() {\n    var self = this;\n    var bool = true;\n    var currUser = firebase.auth().currentUser.uid;\n    var userRef = this.db.collection(\"users\").doc(self.current_user.id);\n    userRef.onSnapshot(doc => {\n      var user = doc.data();\n      var userFriend = user.followers;\n      for(let item of userFriend) {\n        if(item.uid == currUser) {\n          bool = false;\n        }\n      }\n    })\n    setTimeout(function(){\n    if(bool) {\n      self.followToast();\n      self.userService.follow(self.current_user);\n    } else {\n      self.alreadyToast();\n    }\n    }, 1000);\n  }\n  async alreadyToast() {\n    const toast = await this.toastController.create({\n      color:'danger',\n      message: 'Follow request already sent',\n      position:'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n\n  async followToast() {\n    const toast = await this.toastController.create({\n      color:'success',\n      message: 'Follow request sent',\n      position:'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n  following() {\n    var self = this;\n    var bool = false;\n\n    for(let item of this.followingUser) {\n      if(item.uid == self.current_user.uid) {\n        bool = true;\n      }\n    }\n    return bool;\n  }\n\n  async unfollow() {\n    var self = this;\n    const alert = await this.alertController.create({\n      header: 'Unfollow',\n      message: 'Please confirm unfollow',\n      buttons: [\n        {\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {\n\n        }\n      },\n      {\n        text: 'Confirm',\n        role: 'confirm',\n        handler: () => {\n          self.userService.unfollow(this.current_user);\n          self.unfollowToast();\n        }\n      }\n      ]\n    });\n    await alert.present();\n  }\n\n  async unfollowToast() {\n    const toast = await this.toastController.create({\n      color:'success',\n      message: 'User unfollowed',\n      position:'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n\n  liked(post) {\n    var self = this;\n    var bool = false;\n    for(let user of post.likes) {\n      if(user == self.userService.userDoc) {\n        bool = true;\n      }\n    }\n    return bool;\n  }\n  \n  like(post) {\n    this.userService.like(post);\n    var arr = post.likes;\n    arr.push(this.userService.userDoc)\n  }\n\n  comment(post) {\n    this.router.navigate([\"/comments\",post])\n  }\n  \n  unlike(post) {\n    this.userService.unlike(post);\n    var arr = post.likes;\n    const index = arr.indexOf(this.userService.userDoc, 0);\n    if(index > -1) {\n      arr.splice(index, 1);\n    }\n  }\n}\n"]}