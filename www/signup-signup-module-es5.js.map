{"version":3,"sources":["webpack:///src/app/signup/signup.page.html","webpack:///src/app/signup/signup-routing.module.ts","webpack:///src/app/signup/signup.module.ts","webpack:///src/app/signup/signup.page.scss","webpack:///src/app/signup/signup.page.ts"],"names":["routes","path","component","SignupPageRoutingModule","imports","forChild","exports","SignupPageModule","declarations","SignupPage","toastController","router","randomId","Math","random","toString","substr","user","email","password","name","fullname","img","imgfile","navigate","bool","length","self","createUserWithEmailAndPassword","error","console","log","errorCode","code","errorMessage","message","errorToast","then","result","currentUser","db","followers","following","posts","saved","status","collection","add","uid","docRef","id","msg","create","color","position","duration","toast","present","selector","template"],"mappings":"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","file":"signup-signup-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n\\n  <ion-img [src]=\\\"imgfile\\\"></ion-img>\\n  \\n  <!-- <ion-item lines=\\\"none\\\">\\n    <ion-thumbnail slot=\\\"start\\\"> \\n      <ion-img [src]=\\\"user.img\\\"></ion-img> \\n    </ion-thumbnail>\\n\\n    <ion-button size=\\\"normal\\\" color=\\\"primary\\\" (click)=\\\"takePic()\\\">Add Profile Picture</ion-button>\\n\\n  </ion-item> -->\\n\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Full Name</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.fullname\\\" required></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Username</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.name\\\" required></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Email</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" required></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Password</ion-label>\\n    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" required></ion-input>\\n  </ion-item>\\n  <h6></h6>\\n  <ion-button [disabled]=\\\"disabled()\\\" class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" (click)=\\\"signup()\\\">Sign up</ion-button>\\n  \\n  </ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \"ion-content {\\n  --ion-background-color: peachpuff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ydXR2aWtwYXRlbC9QZWFjaC9zcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIiwic3JjL2FwcC9zaWdudXAvc2lnbnVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlDQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9zaWdudXAvc2lnbnVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBwZWFjaHB1ZmY7XG59IiwiaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBwZWFjaHB1ZmY7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { Router } from '@angular/router';\nimport { Camera, CameraOptions } from \"@ionic-native/camera/ngx\";\nimport { ToastController } from \"@ionic/angular\"\nimport { ERROR_COMPONENT_TYPE } from '@angular/compiler';\nimport { NgModel } from '@angular/forms';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n  randomId = Math.random().toString(36).substr(2, 5);\n  user={\n    email:\"\",\n    password:\"\",\n    name:\"\",\n    fullname:\"\",\n    img:\"assets/avatar.png\"};\n\n    imgfile = \"/assets/logo.png\";\n\n    constructor(\n      private toastController:ToastController,\n      private router:Router\n      ) { }\n  \n    ngOnInit() {\n    }\n\n    login() {\n      this.router.navigate([\"/login\"]);\n    }\n\n    // async takePic() {\n    //   var self = this;\n    //    const options: CameraOptions = {\n    //      quality:50,\n    //      targetHeight: 400,\n    //      targetWidth: 400,\n    //      destinationType: this.camera.DestinationType.DATA_URL,\n    //      encodingType: this.camera.EncodingType.JPEG,\n    //      mediaType: this.camera.MediaType.PICTURE\n    //    };\n  \n    //   this.camera.getPicture(options).then((result) => {\n\n    //     const image = `data:image/jpeg;base64,${result}`;\n    //     const pictures = firebase.storage().ref(this.randomId);\n    //     pictures.putString(image, 'data_url');\n\n    //    setTimeout(() => { \n    //     var storageRef = firebase.storage().ref();\n    //     storageRef.child(this.randomId).getDownloadURL().then(function(url) {\n    //       self.user.img = url;\n    //     });\n    //     }, 2000);\n    //   })\n    //  }\n\n    disabled() {\n      var bool = true;\n      if(this.user.email.length != 0 &&\n        this.user.password.length != 0 &&\n        this.user.name.length != 0 &&\n        this.user.fullname.length != 0) {\n        bool = false;\n      }\n      return bool;\n    }\n\n    signup(){\n      var email=this.user.email;\n      var password=this.user.password;\n      var name = this.user.name;\n      var img = this.user.img;\n      var fullname = this.user.fullname;\n      var self = this;\n\n\n  firebase.auth().createUserWithEmailAndPassword(email, password).catch(\n    function(error) {\n    console.log(error);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      self.errorToast(errorMessage);\n      if(errorCode.length > 0){\n        console.log(\"Failed\");\n      }\n      else{\n        console.log(\"signup ok\")\n      }\n    }).then(function(result){\n      var user= firebase.auth().currentUser;\n       var db = firebase.firestore();\n       var followers = [];\n       var following = [];\n       var posts = [];\n       var saved = [];\n       var status = \"\";\n\t\t  db.collection(\"users\").add({\n\t\t    'uid':user.uid,\n        'username': name,\n        'image': img,\n        'posts': posts,\n        'followers': followers,\n        'following':following,\n        'status':status,\n        'fullname':fullname,\n        'privateStat':false,\n        'saved':saved\n\t\t  })\n\t\t  .then(function(docRef) {\n          console.log(\"usetype written with ID: \", docRef.id);\n\t\t  })\n      .catch(function(error) {\n          console.error(\"Error adding document: \", error);\n      });\n      self.user.fullname = \"\";\n      self.user.img = \"/assets/avatar.png\"\n      self.user.name = \"\";\n      self.user.password = \"\";\n      self.user.email = \"\";\n      self.router.navigate([\"/login\"]);\n    });\n  }\n\n    async errorToast(msg) {\n      const toast = await this.toastController.create({\n        color:'danger',\n        message: msg,\n        position:'top',\n        duration: 1000\n      });\n      toast.present();\n    }\n}\n"]}