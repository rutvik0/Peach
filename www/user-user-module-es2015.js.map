{"version":3,"sources":["./src/app/user/user.page.html","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./src/app/user/user.page.scss","./src/app/user/user.page.ts"],"names":[],"mappings":"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","file":"user-user-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{current_user.username}}'s Profile</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-item lines=\\\"none\\\">\\n  <ion-row class=\\\"ion-padding bottom\\\">\\n    <!-- Avatar -->\\n    <ion-col>\\n      <img [src]=\\\"current_user.image\\\" class=\\\"avatar\\\"/>\\n    </ion-col>\\n    <!-- Information about user -->\\n    <ion-col class=\\\"ion-text-center\\\">\\n      <h6>{{current_user.posts}}</h6>\\n      <p><strong>Posts</strong></p>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\">\\n      <h6>{{current_user.followers}}</h6>\\n      <p><strong>Followers</strong></p>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-center\\\">\\n      <h6>{{current_user.following}}</h6>\\n      <p><strong>Following</strong></p>\\n    </ion-col>\\n\\n    <ion-col *ngIf=\\\"!following()\\\">\\n      <ion-button expand=\\\"block\\\" (click)=\\\"follow()\\\">‏‏‎ ‎‏‏‎ ‎follow‏‏‎ ‎‏‏‎ ‎</ion-button>\\n    </ion-col>\\n    <ion-col *ngIf=\\\"following()\\\">\\n      <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"unfollow()\\\">‏‏‎ ‎‏‏‎ ‎follow‏‏‎ing ‎‏‏‎ ‎</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  </ion-item>\\n  <!-- Profile info -->\\n  <div class=\\\"padding\\\">\\n    <p><b>{{current_user.fullname}}</b></p>\\n    <p>{{current_user.status}}</p>\\n  </div>\\n\\n\\n\\n  <div *ngIf=\\\"!following()\\\">\\n    <div *ngIf=\\\"current_user.privateStat === 'true'\\\" class=\\\"ion-padding\\\">\\n      <h4 class=\\\"ion-text-center\\\">{{current_user.fullname}}'s Profile is private, follow to see posts</h4>\\n    </div>\\n\\n    <div *ngIf=\\\"current_user.privateStat === 'false'\\\">\\n      <div>\\n        <ion-segment [(ngModel)]=\\\"profile_segment\\\">\\n          <ion-segment-button value=\\\"grid\\\">\\n            <ion-icon name=\\\"apps\\\"></ion-icon>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"list\\\">\\n            <ion-icon name=\\\"browsers-sharp\\\"></ion-icon>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </div>\\n\\n      <div [ngSwitch]=\\\"profile_segment\\\">\\n        <ion-list *ngSwitchCase=\\\"'grid'\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col sizeLg=\\\"4\\\" sizeMd=\\\"4\\\" sizeXs=\\\"4\\\" *ngFor=\\\"let i of posts\\\">\\n                <img [src]=\\\"i.image\\\">\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-list>\\n\\n        <ion-list *ngSwitchCase=\\\"'list'\\\">\\n          <ion-card *ngFor=\\\"let post of posts\\\">\\n            <ion-card-header>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-avatar>\\n                    <img [src]=\\\"post.userimg\\\">\\n                  </ion-avatar>\\n                <h6 style=\\\"font-weight: bold\\\">‏‏‎ ‎‏‏‎ ‎{{post.username}}</h6>\\n                </ion-item>\\n            </ion-card-header>\\n        \\n            <img [src]=\\\"post.image\\\">\\n        \\n            <ion-buttons>\\n              <ion-button *ngIf=\\\"!liked(post)\\\" (click)=\\\"like(post)\\\">\\n                <ion-icon name=\\\"heart-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button *ngIf=\\\"liked(post)\\\" (click)=\\\"unlike(post)\\\">\\n                <ion-icon class=\\\"border\\\" name=\\\"heart\\\" color=\\\"danger\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button (click)=\\\"comment(post)\\\">\\n                <ion-icon name=\\\"chatbubble-outline\\\"></ion-icon>\\n              </ion-button>\\n            </ion-buttons>\\n\\n            <ion-card-content>\\n              <p>{{post.likes?.length}} Likes</p>\\n              <p *ngIf=\\\"ifCaption(post)\\\"><b>{{post.username}}</b>‏‏‎ ‎{{post.caption}}</p>\\n              \\n              <ion-label class=\\\"color\\\" *ngIf=\\\"commentSize(post)\\\" (click)=\\\"comment(post)\\\"> View all {{post.comments?.length}} comments...</ion-label>\\n              <ion-list lines=\\\"none\\\" *ngFor=\\\"let item of post.comments.slice(0,1)\\\">\\n                <p><b>‏‏‎{{item.username}}</b>‏‏‎ ‎{{item.comment}} </p>\\n              </ion-list>\\n            </ion-card-content>\\n            <ion-label>‏‏‎ ‎{{post.posted | date: 'MM/dd/yyyy'}}</ion-label>\\n          </ion-card>\\n        </ion-list>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"following()\\\">\\n    <div>\\n      <ion-segment [(ngModel)]=\\\"profile_segment\\\">\\n        <ion-segment-button value=\\\"grid\\\">\\n          <ion-icon name=\\\"apps\\\"></ion-icon>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"list\\\">\\n          <ion-icon name=\\\"browsers-sharp\\\"></ion-icon>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </div>\\n\\n    <div [ngSwitch]=\\\"profile_segment\\\">\\n      <ion-list *ngSwitchCase=\\\"'grid'\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col sizeLg=\\\"4\\\" sizeMd=\\\"4\\\" sizeXs=\\\"4\\\" *ngFor=\\\"let i of posts\\\">\\n              <img [src]=\\\"i.image\\\">\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-list>\\n\\n      <ion-list *ngSwitchCase=\\\"'list'\\\">\\n        <ion-card *ngFor=\\\"let post of posts\\\">\\n          <ion-card-header>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-avatar>\\n                  <img [src]=\\\"post.userimg\\\">\\n                </ion-avatar>\\n              <h6 style=\\\"font-weight: bold\\\">‏‏‎ ‎‏‏‎ ‎{{post.username}}</h6>\\n              </ion-item>\\n          </ion-card-header>\\n      \\n          <img [src]=\\\"post.image\\\">\\n      \\n          <ion-buttons>\\n            <ion-button *ngIf=\\\"!liked(post)\\\" (click)=\\\"like(post)\\\">\\n              <ion-icon name=\\\"heart-outline\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button *ngIf=\\\"liked(post)\\\" (click)=\\\"unlike(post)\\\">\\n              <ion-icon class=\\\"border\\\" name=\\\"heart\\\" color=\\\"danger\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"comment(post)\\\">\\n              <ion-icon name=\\\"chatbubble-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n      \\n          <ion-card-content>\\n            <p>{{post.likes?.length}} Likes</p>\\n            <p *ngIf=\\\"ifCaption(post)\\\"><b>{{post.username}}</b>‏‏‎ ‎{{post.caption}}</p>\\n            \\n            <ion-label class=\\\"color\\\" *ngIf=\\\"commentSize(post)\\\" (click)=\\\"comment(post)\\\"> View all {{post.comments?.length}} comments...</ion-label>\\n            <ion-list lines=\\\"none\\\" *ngFor=\\\"let item of post.comments.slice(0,1)\\\">\\n              <p><b>‏‏‎{{item.username}}</b>‏‏‎ ‎{{item.comment}} </p>\\n            </ion-list>\\n          </ion-card-content>\\n          <ion-label>‏‏‎ ‎{{post.posted | date: 'MM/dd/yyyy'}}</ion-label>\\n        </ion-card>\\n      </ion-list>\\n    </div>\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserPage } from './user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserPageRoutingModule } from './user-routing.module';\n\nimport { UserPage } from './user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserPageRoutingModule\n  ],\n  declarations: [UserPage]\n})\nexport class UserPageModule {}\n","export default \"ion-header {\\n  --ion-background-color: peachpuff;\\n}\\n\\nion-content {\\n  --ion-background-color: peachpuff;\\n}\\n\\n.padding {\\n  padding-top: 0px;\\n  padding-bottom: 0px;\\n  padding-left: 20px;\\n}\\n\\n.lines {\\n  border-bottom: 1px solid grey;\\n  border-top: 1px solid grey;\\n}\\n\\n.bottom {\\n  padding-bottom: 0px;\\n}\\n\\n.avatar {\\n  width: 100% !important;\\n  height: 100% !important;\\n  max-width: 600px !important;\\n  max-height: 600px !important;\\n  border-radius: 30px;\\n}\\n\\nion-card-header {\\n  padding: 0;\\n}\\n\\nion-card-content {\\n  color: black;\\n}\\n\\n.black {\\n  color: black;\\n}\\n\\n.color {\\n  color: grey;\\n}\\n\\n.size {\\n  width: 100% !important;\\n  height: 100% !important;\\n  max-width: 30px !important;\\n  max-height: 30px !important;\\n}\\n\\n.center {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: auto;\\n  margin-bottom: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ydXR2aWtwYXRlbC9QZWFjaC9zcmMvYXBwL3VzZXIvdXNlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3VzZXIvdXNlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQ0FBQTtBQ0NKOztBREVBO0VBQ0ksaUNBQUE7QUNDSjs7QURDQTtFQUNJLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQ0VKOztBREFBO0VBQ0ksNkJBQUE7RUFDQSwwQkFBQTtBQ0dKOztBRERBO0VBQ0ksbUJBQUE7QUNJSjs7QURGQTtFQUNJLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSwyQkFBQTtFQUNBLDRCQUFBO0VBRUEsbUJBQUE7QUNJSjs7QURGQTtFQUNJLFVBQUE7QUNLSjs7QURIQTtFQUNJLFlBQUE7QUNNSjs7QURIQTtFQUNFLFlBQUE7QUNNRjs7QURKQTtFQUNJLFdBQUE7QUNPSjs7QURMRTtFQUNFLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSwwQkFBQTtFQUNBLDJCQUFBO0FDUUo7O0FETEU7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ1FKIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1oZWFkZXIge1xuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHBlYWNocHVmZjtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHBlYWNocHVmZjtcbn1cbi5wYWRkaW5nIHtcbiAgICBwYWRkaW5nLXRvcDogMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuLmxpbmVze1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmV5O1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBncmV5O1xufVxuLmJvdHRvbSB7XG4gICAgcGFkZGluZy1ib3R0b206IDBweDtcbn1cbi5hdmF0YXIge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0IDogMTAwJSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogNjAwcHggIWltcG9ydGFudDsgIC8vYW55IHNpemVcbiAgICBtYXgtaGVpZ2h0OiA2MDBweCAhaW1wb3J0YW50OyAvL2FueSBzaXplXG5cbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xufVxuaW9uLWNhcmQtaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAwO1xufVxuaW9uLWNhcmQtY29udGVudHtcbiAgICBjb2xvcjogYmxhY2s7XG59XG5cbi5ibGFjayB7XG4gIGNvbG9yOiBibGFjaztcbn1cbi5jb2xvciB7XG4gICAgY29sb3I6IGdyZXk7XG59XG4gIC5zaXplIHtcbiAgICB3aWR0aDoxMDAlICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0IDogMTAwJSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMzBweCAhaW1wb3J0YW50OyAgLy9hbnkgc2l6ZVxuICAgIG1heC1oZWlnaHQ6IDMwcHggIWltcG9ydGFudDsgLy9hbnkgc2l6ZVxuICB9XG5cbiAgLmNlbnRlciB7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogYXV0bztcbiAgfSIsImlvbi1oZWFkZXIge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBwZWFjaHB1ZmY7XG59XG5cbmlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcGVhY2hwdWZmO1xufVxuXG4ucGFkZGluZyB7XG4gIHBhZGRpbmctdG9wOiAwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAwcHg7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbn1cblxuLmxpbmVzIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGdyZXk7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCBncmV5O1xufVxuXG4uYm90dG9tIHtcbiAgcGFkZGluZy1ib3R0b206IDBweDtcbn1cblxuLmF2YXRhciB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IDYwMHB4ICFpbXBvcnRhbnQ7XG4gIG1heC1oZWlnaHQ6IDYwMHB4ICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG59XG5cbmlvbi1jYXJkLWhlYWRlciB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmlvbi1jYXJkLWNvbnRlbnQge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5ibGFjayB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmNvbG9yIHtcbiAgY29sb3I6IGdyZXk7XG59XG5cbi5zaXplIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gIG1heC13aWR0aDogMzBweCAhaW1wb3J0YW50O1xuICBtYXgtaGVpZ2h0OiAzMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5jZW50ZXIge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport * as firebase from 'firebase'\nimport { ToastController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.page.html',\n  styleUrls: ['./user.page.scss'],\n})\n\nexport class UserPage implements OnInit {\n\n  current_user;\n  db = firebase.firestore();\n  postId = [];\n  posts = [];\n  followingUser;\n\n  profile_segment = \"grid\";\n\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public userService: UserService,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {\n    var self = this;\n    setTimeout(() => {\n      var postRef = this.db.collection(\"users\").doc(self.current_user.id);\n      postRef.get().then(function(doc) {\n        var user = doc.data();\n        self.postId = user.posts;\n      })\n      setTimeout(() => {\n        for(let id of self.postId) {\n          var ref = this.db.collection(\"posts\").doc(id);\n          ref.get().then(function(doc) {\n            var post = doc.data();\n            self.posts.push({caption:post.caption,comments:post.comments,\n              id:post.id,image:post.image,likes:post.likes,posted:post.posted,\n              userimg:post.userimg,username:post.username,pid:doc.id});\n          })\n        }\n      }, 300);\n    }, 50);\n\n    this.userService.getObservable().subscribe((data) => {\n      this.followingUser = this.userService.following;\n    });\n    \n    this.followingUser = this.userService.following;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      param => {\n        this.current_user = param;\n      }\n    )\n  }\n\n  \n\n  commentSize(post) {\n    var bool = false;\n    var comments = post.comments;\n    if(comments.length !== 0) {\n      bool = true;\n    }\n    return bool;\n  }\n\n  ifCaption(post) {\n    var bool = false;\n    var caption = post.caption;\n    if(caption.length !== 0) {\n      bool = true;\n    }\n    return bool;\n  }\n\n  follow() {\n    var self = this;\n    var bool = true;\n    var currUser = firebase.auth().currentUser.uid;\n    var userRef = this.db.collection(\"users\").doc(self.current_user.id);\n    userRef.onSnapshot(doc => {\n      var user = doc.data();\n      var userFriend = user.followers;\n      for(let item of userFriend) {\n        if(item.uid == currUser) {\n          bool = false;\n        }\n      }\n    })\n    setTimeout(function(){\n    if(bool) {\n      self.followToast();\n      self.userService.follow(self.current_user);\n    } else {\n      self.alreadyToast();\n    }\n    }, 1000);\n  }\n  async alreadyToast() {\n    const toast = await this.toastController.create({\n      color:'danger',\n      message: 'Follow request already sent',\n      position:'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n\n  async followToast() {\n    const toast = await this.toastController.create({\n      color:'success',\n      message: 'Follow request sent',\n      position:'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n  following() {\n    var self = this;\n    var bool = false;\n\n    for(let item of this.followingUser) {\n      if(item.uid == self.current_user.uid) {\n        bool = true;\n      }\n    }\n    return bool;\n  }\n\n  async unfollow() {\n    var self = this;\n    const alert = await this.alertController.create({\n      header: 'Unfollow',\n      message: 'Please confirm unfollow',\n      buttons: [\n        {\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {\n\n        }\n      },\n      {\n        text: 'Confirm',\n        role: 'confirm',\n        handler: () => {\n          self.userService.unfollow(this.current_user);\n          self.unfollowToast();\n        }\n      }\n      ]\n    });\n    await alert.present();\n  }\n\n  async unfollowToast() {\n    const toast = await this.toastController.create({\n      color:'success',\n      message: 'User unfollowed',\n      position:'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n\n  liked(post) {\n    var self = this;\n    var bool = false;\n    for(let user of post.likes) {\n      if(user == self.userService.userDoc) {\n        bool = true;\n      }\n    }\n    return bool;\n  }\n  \n  like(post) {\n    this.userService.like(post);\n    var arr = post.likes;\n    arr.push(this.userService.userDoc)\n  }\n\n  comment(post) {\n    this.router.navigate([\"/comments\",post])\n  }\n  \n  unlike(post) {\n    this.userService.unlike(post);\n    var arr = post.likes;\n    const index = arr.indexOf(this.userService.userDoc, 0);\n    if(index > -1) {\n      arr.splice(index, 1);\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}